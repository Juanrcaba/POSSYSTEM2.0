<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnmesa1.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>